@function pi() {
  @return 3.14159265359;
}
@function pow($number, $exp) {
  $value: 1;
  @if $exp > 0 {
    @for $i from 1 through $exp {
      $value: $value * $number;
    }
  }
  @else if $exp < 0 {
    @for $i from 1 through -$exp {
      $value: $value / $number;
    }
  }
  @return $value;
}
@function fact($number) {
  $value: 1;
  @if $number > 0 {
    @for $i from 1 through $number {
      $value: $value * $i;
    }
  }
  @return $value;
}
@function rad($angle) {
  $unit: unit($angle);
  $unitless: $angle / ($angle * 0 + 1);
  @if $unit == deg {
    $unitless: $unitless / 180 * pi();
  }
  @return $unitless;
}
@function sin($angle) {
  $sin: 0;
  $angle: rad($angle);
  @for $i from 0 through 10 {
    $sin: $sin + pow(-1, $i) * pow($angle, (2 * $i + 1)) / fact(2 * $i + 1);
  }
  @return $sin;
}
@function cos($angle) {
  $cos: 0;
  $angle: rad($angle);
  @for $i from 0 through 10 {
    $cos: $cos + pow(-1, $i) * pow($angle, 2 * $i) / fact(2 * $i);
  }
  @return $cos;
}
@function tan($angle) {
  @return sin($angle) / cos($angle);
}

$inner: 1px;

$width: 50;
$height: #{cos(pi()/6) * $width};

$w: #{$width}px;
$h: #{$height}px;

$cube-w: #{2 * cos(pi()/6) * $width};
$cube-h: #{1.5 * $width};

.cube {
  width: #{$cube-w}px;
  height: #{$cube-h}px;
  display: inline-block;
  position : relative;

  .cube-face {
    width: $w;
    height: $h;
    transform-origin: 0 0;
    display: inline-block;
    position: absolute;
    border: $inner solid white;

    .cube-face-inner {
      position: absolute;
      top: 0;
      bottom: 0;
      left: 0;
      right: 0;
    }
  }

  .cube-face {
    transform: rotate(-30deg) skew(30deg);
    top: calc(#{$w}/2);
  }
  .cube-face + .cube-face {
    transform: rotate(30deg) skewX(30deg);
    top: calc(#{$w}/2);
  }
  .cube-face + .cube-face + .cube-face {
    transform: rotate(-30deg) skewX(-30deg);
    top: #{$w};
    left: $h;
  }
}